"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../util");
const getType_1 = require("../getType");
function generateFile(config) {
    const { data } = config;
    const output = `
// This file is automatically generated - don't edit it. 
// Search Types for record ${data.label} (${data.id})

// Search Columns

${generateSearchColumn(config).output}


// Search Filters

${generateSearchFilter(config).output}


// Search Joins

${generateSearchJoins(config).output}


// Search Filter Types

${generateSearchFilterTypes(config).output}


// Search Column Types

${generateSearchColumnTypes(config).output}

`.trim();
    return { output };
}
exports.generateFile = generateFile;
function generateSearchColumn(config) {
    const { data } = config;
    const output = `
/** ${data.label} (${data.id}) Search Columns definition */
export interface ${data.id}SearchColumn {${data.searchColumns.map(c => {
        const type = getType_1.getType(c.type);
        return `
${util_1.indent()}/** ${c.label} (${c.id}: ${c.type}) */
${util_1.indent()}${c.id}?: ${type};
`.trim();
    }).join(`\n${util_1.indent()}`)}
}`.trim();
    return { output };
}
exports.generateSearchColumn = generateSearchColumn;
function generateSearchFilter(config) {
    const { data } = config;
    const output = `
/** ${data.label} (${data.id}) Search Filters definition */
export interface ${data.id}SearchFilter {${data.searchFilters.map(c => {
        const type = getType_1.getType(c.type);
        return `
/** ${c.label} (${c.id}: ${c.type}) */
${util_1.indent()}${c.id}?: ${type};
`.trim();
    }).join(`\n${util_1.indent()}`)}
}`.trim();
    return { output };
}
exports.generateSearchFilter = generateSearchFilter;
function generateSearchJoins(config) {
    const { data } = config;
    const output = `
/** ${data.label} (${data.id}) Search Joins definitions. */
export interface ${data.id}SearchJoinTypes {${data.searchJoins.map(c => {
        return `
/** ${data.id}'s ${c.id} search filter. ${c.description}. Actual name: ${c.actualName}. */
${util_1.indent()}${c.id}: '${c.id}';
`.trim();
    }).join(`\n${util_1.indent()}`)}
}`.trim();
    return { output };
}
exports.generateSearchJoins = generateSearchJoins;
function generateSearchFilterTypes(config) {
    const { data } = config;
    const output = `
/** ${data.label} (${data.id}) Search Filter Type definitions. */
export interface ${data.id}SearchFilterTypes {${data.searchFilters.map(c => {
        return `
${util_1.indent()}${c.id}: '${c.type}';
`.trim();
    }).join(`\n${util_1.indent()}`)}
}`.trim();
    return { output };
}
exports.generateSearchFilterTypes = generateSearchFilterTypes;
function generateSearchColumnTypes(config) {
    const { data } = config;
    const output = `
/** ${data.label} (${data.id}) Search Column Type definitions. */
export interface ${data.id}SearchColumnTypes {${data.searchColumns.map(c => {
        return `
${util_1.indent()}${c.id}: '${c.type}';
`.trim();
    }).join(`\n${util_1.indent()}`)}
}`.trim();
    return { output };
}
exports.generateSearchColumnTypes = generateSearchColumnTypes;
// TODO
// interface itemSearchFilterTypes {
//   account: 'select';
// }
// interface itemSearchColumnTypes {
//   location: 'checkbox';
// }
