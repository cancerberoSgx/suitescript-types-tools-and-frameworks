// This file is automatically generated - don't edit it. 
// Search Types for record Subsidiary (subsidiary)

// Search Columns

/** Subsidiary (subsidiary) Search Columns definition */
export interface subsidiarySearchColumn {
  /** Accounting Book (accountingbook: select) */
      accountingbook?: string;
  /** Accounting Book Currency (accountingbookcurrency: select) */
      accountingbookcurrency?: string;
  /** Anonymous Customer - Inbound Email (anonymouscustomerinboundemail: text) */
      anonymouscustomerinboundemail?: string;
  /** Anonymous Customer - Online Forms (anonymouscustomeronlineforms: text) */
      anonymouscustomeronlineforms?: string;
  /** Employee Notification Template - Case Assignment (caseassignmenttemplate: text) */
      caseassignmenttemplate?: string;
  /** Customer Notification Template - Automatic Case Closure (caseautomaticclosuretemplate: text) */
      caseautomaticclosuretemplate?: string;
  /** Employee Notification Template - Copy Employee (casecopyemployeetemplate: text) */
      casecopyemployeetemplate?: string;
  /** Customer Notification Template - Case Creation (casecreationtemplate: text) */
      casecreationtemplate?: string;
  /** Employee Notification Template - Escalation (caseescalationtemplate: text) */
      caseescalationtemplate?: string;
  /** Customer Notification Template - Case Update (caseupdatetemplate: text) */
      caseupdatetemplate?: string;
  /** City (city: text) */
      city?: string;
  /** Company Name for Support Messages (companynameforsupportmessages: text) */
      companynameforsupportmessages?: string;
  /** Country (country: select) */
      country?: string;
  /** Currency (currency: select) */
      currency?: string;
  /** Effective From (effectivefrom: date) */
      effectivefrom?: string;
  /** Email (email: email) */
      email?: string;
  /** Employee Notification Template - Case Update (employeecaseupdatetemplate: text) */
      employeecaseupdatetemplate?: string;
  /** External ID (externalid: select) */
      externalid?: string;
  /** Fax (fax: phone) */
      fax?: string;
  /** Formula (Currency) (formulacurrency: currency) */
      formulacurrency?: string;
  /** Formula (Date) (formuladate: date) */
      formuladate?: string;
  /** Formula (Date/Time) (formuladatetime: datetime) */
      formuladatetime?: string;
  /** Formula (Numeric) (formulanumeric: float) */
      formulanumeric?: string;
  /** Formula (Percent) (formulapercent: percent) */
      formulapercent?: string;
  /** Formula (Text) (formulatext: text) */
      formulatext?: string;
  /** Internal ID (internalid: select) */
      internalid?: string;
  /** Elimination (iselimination: checkbox) */
      iselimination?: boolean;
  /** Inactive (isinactive: checkbox) */
      isinactive?: boolean;
  /** Legal Name (legalname: text) */
      legalname?: string;
  /** Main Support Email Address (mainsupportemailaddress: email) */
      mainsupportemailaddress?: string;
  /** MOSS Applies (mossapplies: checkbox) */
      mossapplies?: boolean;
  /** Name (name: text) */
      name?: string;
  /** Name (no hierarchy) (namenohierarchy: text) */
      namenohierarchy?: string;
  /** Nexus (nexus: select) */
      nexus?: string;
  /** Phone (phone: phone) */
      phone?: string;
  /** Vendor Bill - Purchase Order Amount Tolerance (purchaseorderamount: float) */
      purchaseorderamount?: string;
  /** Vendor Bill - Purchase Order Quantity Tolerance (purchaseorderquantity: float) */
      purchaseorderquantity?: string;
  /** Vendor Bill - Purchase Order Quantity Difference (purchaseorderquantitydiff: float) */
      purchaseorderquantitydiff?: string;
  /** Vendor Bill - Item Receipt Amount Tolerance (receiptamount: float) */
      receiptamount?: string;
  /** Vendor Bill - Item Receipt Quantity Tolerance (receiptquantity: float) */
      receiptquantity?: string;
  /** Vendor Bill - Item Receipt Quantity Difference (receiptquantitydiff: float) */
      receiptquantitydiff?: string;
  /** State/Province (state: select) */
      state?: string;
  /** Tax Engine (taxengine: select) */
      taxengine?: string;
  /** Tax ID (taxidnum: text) */
      taxidnum?: string;
  /** Tax Reg. Number (taxregistrationnumber: text) */
      taxregistrationnumber?: string;
  /** Transaction Prefix (tranprefix: text) */
      tranprefix?: string;
  /** Web Site (url: url) */
      url?: string;
  /** Valid Until (validuntil: date) */
      validuntil?: string;
  /** Zip (zip: text) */
      zip?: string;
}


// Search Filters

/** Subsidiary (subsidiary) Search Filters definition */
export interface subsidiarySearchFilter {
/** Accounting Book (accountingbook: select) */
  accountingbook?: string;
  /** Accounting Book Currency (accountingbookcurrency: select) */
  accountingbookcurrency?: string;
  /** Address (address: textarea) */
  address?: string;
  /** City (city: text) */
  city?: string;
  /** Country (country: select) */
  country?: string;
  /** Currency (currency: select) */
  currency?: string;
  /** Effective From (effectivefrom: date) */
  effectivefrom?: string;
  /** Email (email: email) */
  email?: string;
  /** External ID (externalid: select) */
  externalid?: string;
  /** External ID (Text) (externalidstring: text) */
  externalidstring?: string;
  /** Fax (fax: phone) */
  fax?: string;
  /** Formula (Date) (formuladate: date) */
  formuladate?: string;
  /** Formula (Numeric) (formulanumeric: float) */
  formulanumeric?: string;
  /** Formula (Text) (formulatext: text) */
  formulatext?: string;
  /** Internal ID (internalid: select) */
  internalid?: string;
  /** Internal ID (Number) (internalidnumber: integer) */
  internalidnumber?: string;
  /** Elimination (iselimination: checkbox) */
  iselimination?: boolean;
  /** Inactive (isinactive: checkbox) */
  isinactive?: boolean;
  /** Legal Name (legalname: text) */
  legalname?: string;
  /** MOSS Applies (mossapplies: checkbox) */
  mossapplies?: boolean;
  /** Name (name: text) */
  name?: string;
  /** Nexus (nexus: select) */
  nexus?: string;
  /** Phone (phone: phone) */
  phone?: string;
  /** Vendor Bill - Purchase Order Amount Tolerance (purchaseorderamount: float) */
  purchaseorderamount?: string;
  /** Vendor Bill - Purchase Order Quantity Tolerance (purchaseorderquantity: float) */
  purchaseorderquantity?: string;
  /** Vendor Bill - Purchase Order Quantity Difference (purchaseorderquantitydiff: float) */
  purchaseorderquantitydiff?: string;
  /** Vendor Bill - Item Receipt Amount Tolerance (receiptamount: float) */
  receiptamount?: string;
  /** Vendor Bill - Item Receipt Quantity Tolerance (receiptquantity: float) */
  receiptquantity?: string;
  /** Vendor Bill - Item Receipt Quantity Difference (receiptquantitydiff: float) */
  receiptquantitydiff?: string;
  /** State/Province (state: select) */
  state?: string;
  /** Tax Engine (taxengine: select) */
  taxengine?: string;
  /** Tax ID (taxidnum: text) */
  taxidnum?: string;
  /** Tax Reg. Number (taxregistrationnumber: text) */
  taxregistrationnumber?: string;
  /** Transaction Prefix (tranprefix: text) */
  tranprefix?: string;
  /** Web Site (url: url) */
  url?: string;
  /** Valid Until (validuntil: date) */
  validuntil?: string;
  /** Zip (zip: text) */
  zip?: string;
}


// Search Joins

/** Subsidiary (subsidiary) Search Joins definitions. */
export interface subsidiarySearchJoinTypes {
/** subsidiary's address search filter. Address. Actual name: Address. */
  address: 'address';
  /** subsidiary's defaultadvancetoapplyaccount search filter. Default Advance to Apply Account. Actual name: Account. */
  defaultadvancetoapplyaccount: 'defaultadvancetoapplyaccount';
  /** subsidiary's returnaddress search filter. Return Address. Actual name: Address. */
  returnaddress: 'returnaddress';
  /** subsidiary's shippingaddress search filter. Shipping Address. Actual name: Address. */
  shippingaddress: 'shippingaddress';
}


// Search Filter Types

/** Subsidiary (subsidiary) Search Filter Type definitions. */
export interface subsidiarySearchFilterTypes {
accountingbook: 'select';
  accountingbookcurrency: 'select';
  address: 'textarea';
  city: 'text';
  country: 'select';
  currency: 'select';
  effectivefrom: 'date';
  email: 'email';
  externalid: 'select';
  externalidstring: 'text';
  fax: 'phone';
  formuladate: 'date';
  formulanumeric: 'float';
  formulatext: 'text';
  internalid: 'select';
  internalidnumber: 'integer';
  iselimination: 'checkbox';
  isinactive: 'checkbox';
  legalname: 'text';
  mossapplies: 'checkbox';
  name: 'text';
  nexus: 'select';
  phone: 'phone';
  purchaseorderamount: 'float';
  purchaseorderquantity: 'float';
  purchaseorderquantitydiff: 'float';
  receiptamount: 'float';
  receiptquantity: 'float';
  receiptquantitydiff: 'float';
  state: 'select';
  taxengine: 'select';
  taxidnum: 'text';
  taxregistrationnumber: 'text';
  tranprefix: 'text';
  url: 'url';
  validuntil: 'date';
  zip: 'text';
}


// Search Column Types

/** Subsidiary (subsidiary) Search Column Type definitions. */
export interface subsidiarySearchColumnTypes {
accountingbook: 'select';
  accountingbookcurrency: 'select';
  anonymouscustomerinboundemail: 'text';
  anonymouscustomeronlineforms: 'text';
  caseassignmenttemplate: 'text';
  caseautomaticclosuretemplate: 'text';
  casecopyemployeetemplate: 'text';
  casecreationtemplate: 'text';
  caseescalationtemplate: 'text';
  caseupdatetemplate: 'text';
  city: 'text';
  companynameforsupportmessages: 'text';
  country: 'select';
  currency: 'select';
  effectivefrom: 'date';
  email: 'email';
  employeecaseupdatetemplate: 'text';
  externalid: 'select';
  fax: 'phone';
  formulacurrency: 'currency';
  formuladate: 'date';
  formuladatetime: 'datetime';
  formulanumeric: 'float';
  formulapercent: 'percent';
  formulatext: 'text';
  internalid: 'select';
  iselimination: 'checkbox';
  isinactive: 'checkbox';
  legalname: 'text';
  mainsupportemailaddress: 'email';
  mossapplies: 'checkbox';
  name: 'text';
  namenohierarchy: 'text';
  nexus: 'select';
  phone: 'phone';
  purchaseorderamount: 'float';
  purchaseorderquantity: 'float';
  purchaseorderquantitydiff: 'float';
  receiptamount: 'float';
  receiptquantity: 'float';
  receiptquantitydiff: 'float';
  state: 'select';
  taxengine: 'select';
  taxidnum: 'text';
  taxregistrationnumber: 'text';
  tranprefix: 'text';
  url: 'url';
  validuntil: 'date';
  zip: 'text';
}